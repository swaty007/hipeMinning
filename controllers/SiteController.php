<?php

namespace app\controllers;

use app\models\ContactForm;
use app\models\Currency;
use app\models\LoginForm;
use app\models\Minner;
use app\models\SignupForm;
use app\models\User;
use Yii;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\web\Controller;
use yii\web\Response;

//use app\models\RegisterForm;

class SiteController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function beforeAction($action)
    {
//        Yii::$app->controller->enableCsrfValidation = false;
        $session = Yii::$app->session;
        $session->open();
        if ($session->has('language')) {
            $language = $session->get('language');
            \Yii::$app->language = $language;
        }
        $session->close();

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Displays homepage.
     *
     * @return string
     */
    public function actionIndex()
    {
        $minners = Minner::find()->all();
        $currencies = [];

        foreach (Currency::find()->all() as $currency) {
            $currencies[$currency->key] = ['rate' => $currency->rate, 'price' => $currency->price, 'algoritm' => $currency->algoritm, 'name' => $currency->name];
        }

        return $this->render('index', ['minners' => $minners, 'currencies' => $currencies]);
    }

    public function actionAuth()
    {
        if (Yii::$app->user->isGuest) {
            return $this->render('auth', ['auth' => 'reg']);
        }

        return $this->render('auth', ['auth' => 'email']);
    }

    public function actionAuthorize()
    {
        $c = (string)Yii::$app->request->get('k', '');

        $u = User::find()->where(['authorized_key' => $c])->andWhere(['authorized' => 0]);

        if ($u->count()) {
            $u = $u->one();
            $u->authorized = 1;
            $u->save();

            Yii::$app->user->login($u, 3600 * 24);

            return $this->redirect('/');
        }

        return $this->redirect('/');
    }

    public function actionLanguage()
    {
        $lang = Yii::$app->request->get('lang');
        if ($lang == 'en-US' || $lang == 'ru-RU') {
            $session = Yii::$app->session;
            $session->open();
            if ($session->isActive) {
                $session->set('language', $lang);
//            $cookies = Yii::$app->response->cookies;
//            $cookies->add(new \yii\web\Cookie([
//                'name' => 'language',
//                'value' => $lang,
//            ]));
            }
            \Yii::$app->language = $lang;
            $session->close();
            return $this->redirect(Yii::$app->request->referrer);
        }
        return 'gg';
    }

    /**
     * Login action.
     *
     * @return Response|string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $model = new LoginForm();

        //$dec = $this->checkCaptcha();

        //  if ( $dec->success === true) {
        if ($model->load(Yii::$app->request->post()) && $model->login()) {
            return $this->goBack();
        } elseif (Yii::$app->request->post()) {
            // } else if(Yii::$app->request->post()){

            return $this->render('login', [
                'model' => $model, 'recaptcha' => true
            ]);
        }

        return $this->render('login', [
            'model' => $model,
        ]);
    }

    private function checkCaptcha()
    {
        $captcha = Yii::$app->request->post('g-recaptcha-response');
        $ch = curl_init('https://www.google.com/recaptcha/api/siteverify');
        curl_setopt($ch, CURLOPT_FAILONERROR, TRUE);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        $req = [];
        $req['secret'] = "6Ld7Rj4UAAAAAB-tA75AqDezoZtGdVP3zM8J9QWN";
        $req['response'] = $captcha;
        $post_data = http_build_query($req, '', '&');
        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
        $data = curl_exec($ch);
        return json_decode($data);
    }

    public function actionRegister()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->redirect('/?2');
        }

        $model = new SignupForm();
        if ($model->load(Yii::$app->request->post())) {
            $u = $model->signup();

            if (!is_null($u)) {
                $u->referer_id = Yii::$app->request->post('ref', null);
                $u->save();
            }

            return $this->redirect('/?3');
        }
        return $this->render('register', [
            'model' => $model,
        ]);
    }

    /**
     * Logout action.
     *
     * @return Response
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }

    /**
     * Displays contact page.
     *
     * @return Response|string
     */
    public function actionContact()
    {
        $model = new ContactForm();
        if ($model->load(Yii::$app->request->post()) && $model->contact(Yii::$app->params['adminEmail'])) {
            Yii::$app->session->setFlash('contactFormSubmitted');

            return $this->refresh();
        }
        return $this->render('contact', [
            'model' => $model,
        ]);
    }

    /**
     * Displays about page.
     *
     * @return string
     */
    public function actionAbout()
    {
        return $this->render('about');
    }
}
